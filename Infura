from web3 import Web3

# Conectarea la nodul Infura
infura_url = 'https://mainnet.infura.io/v3/YOUR-PROJECT-ID'
web3 = Web3(Web3.HTTPProvider(infura_url))

# Verificarea conexiunii
if web3.isConnected():
    print("Connected to Ethereum node")
else:
    print("Failed to connect to Ethereum node")

# Adresa contractului implementat
contract_address = 'YOUR_CONTRACT_ADDRESS'

# ABI-ul contractului
contract_abi = [{
    "constant": False,
    "inputs": [{
        "name": "_data",
        "type": "string"
    }],
    "name": "setData",
    "outputs": [],
    "payable": False,
    "stateMutability": "nonpayable",
    "type": "function"
}, {
    "constant": True,
    "inputs": [],
    "name": "getData",
    "outputs": [{
        "name": "",
        "type": "string"
    }],
    "payable": False,
    "stateMutability": "view",
    "type": "function"
}]

# Interacționarea cu contractul
contract = web3.eth.contract(address=contract_address, abi=contract_abi)


# Funcția pentru setarea datelor
def set_data(data, private_key, account):
    nonce = web3.eth.getTransactionCount(account)
    txn = contract.functions.setData(data).buildTransaction({
        'chainId':
        1,
        'gas':
        70000,
        'gasPrice':
        web3.toWei('10', 'gwei'),
        'nonce':
        nonce,
    })

    signed_txn = web3.eth.account.sign_transaction(txn,
                                                   private_key=private_key)
    tx_hash = web3.eth.sendRawTransaction(signed_txn.rawTransaction)
    print(f'Transaction hash: {web3.toHex(tx_hash)}')


# Funcția pentru citirea datelor
def get_data():
    return contract.functions.getData().call()


# Exemplu de utilizare
private_key = 'YOUR_PRIVATE_KEY'
account = 'YOUR_ETHEREUM_ACCOUNT_ADDRESS'

set_data('Hello, Ethereum!', private_key, account)
print(get_data())
